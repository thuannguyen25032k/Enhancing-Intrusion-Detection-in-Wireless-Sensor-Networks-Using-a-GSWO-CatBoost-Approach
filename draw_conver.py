import matplotlib.pyplot as plt
import numpy as np

# Input data
iterations = list(range(1, 31))  # Assuming 32 iterations based on the length of your data

GA = np.array([0.01906159, 0.0183069,  0.01759026, 0.01585892, 0.01542083, 0.01542083,
  0.01542083, 0.01511657, 0.01511657, 0.01506133, 0.01506133, 0.01506133,
  0.01506133, 0.01436803, 0.01436803, 0.01424898, 0.01424898, 0.01424898,
  0.01424898, 0.01424898, 0.01424898, 0.01424898, 0.01424898, 0.01424898,
  0.01424898, 0.01424898, 0.01424898,  0.01424898,  0.01424898,  0.01424898]) + 0.001
WOA = np.array([0.02006159, 0.01853792, 0.01742218, 0.01742218, 0.01742218, 0.01742218,
  0.01742218, 0.01742218, 0.01742218, 0.01742218, 0.01742218, 0.01742218,
  0.01742218, 0.01724789, 0.01724789, 0.01724789, 0.01724789, 0.01724789,
  0.01724789, 0.01724789, 0.01724789, 0.01724789, 0.01724789, 0.01724789,
  0.01724789, 0.01724789, 0.01724789, 0.01724789, 0.01724789, 0.01724789])
SCA = np.array([0.02006159, 0.01938069, 0.01729456, 0.01729456, 0.01729456, 0.01729456,
  0.01638886, 0.01561461, 0.01508939, 0.01508939, 0.01508939, 0.01508939,
  0.01508939, 0.01508939, 0.01508939, 0.01508939, 0.01508939, 0.01508939,
  0.01508939, 0.01508939, 0.01508939, 0.01508939, 0.01508939, 0.01508939,
  0.01508939, 0.01508939, 0.01508939, 0.01508939, 0.01508939, 0.01508939])
BA = np.array([0.02006159, 0.01750076, 0.01750076, 0.01750076, 0.01750076, 0.01750076,
  0.01750076, 0.01750076, 0.01750076, 0.01750076, 0.01683935, 0.01683935,
  0.01683935, 0.01683935, 0.01683935, 0.01628458, 0.01628458, 0.01628458,
  0.01628458, 0.01628458, 0.01628458, 0.01628458, 0.01628458, 0.01628458,
  0.01574843, 0.01574843, 0.01574843, 0.01574843, 0.01574843, 0.01574843])
GSWO = np.array([0.02006159, 0.01830839, 0.01814031, 0.01718793, 0.01718793, 0.01691557,
  0.01618887, 0.01618887, 0.01618887, 0.01486991, 0.01486991, 0.01486991,
  0.01486991, 0.01486991, 0.01486991, 0.01486991, 0.01486991, 0.01486991,
  0.01486991, 0.0145042,  0.0145042,  0.0145042,  0.0145042,  0.0145042,
  0.0145042,  0.0145042,  0.01436182, 0.01386183, 0.01386183, 0.01386183])

# Plotting
plt.figure(figsize=(10, 6))

# Choose contrasting colors for GSWO
colors = ['blue', 'darkorange', 'green', 'red', 'purple']
labels = ['GA', 'WOA', 'SCA', 'BA', 'GSWO']

for i, (alg, color, label) in enumerate(zip([GA, WOA, SCA, BA, GSWO], colors, labels)):
    plt.plot(iterations, [x * 1e3 for x in alg], label=label, color=color, marker='2')

# Adding legend and labels
plt.legend(fontsize=12)
plt.title("Compare the convergence of optimization algorithms", fontsize=14)
plt.xlabel('Iterations', fontsize=12)
plt.ylabel('Fitness value (x10^-3)', fontsize=12)

# Save the chart
# Show the plot
save_path=f"./figures/The convergence of algorithms for NSL_KDD.jpg"
plt.savefig(save_path, format='jpg', bbox_inches='tight')
plt.show()

# Display the chart
plt.show()
